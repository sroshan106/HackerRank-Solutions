#!/bin/python3

import math
import os
import random
import re
import sys

class SinglyLinkedListNode:
    def __init__(self, node_data):
        self.data = node_data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert_node(self, node_data):
        node = SinglyLinkedListNode(node_data)

        if not self.head:
            self.head = node
        else:
            self.tail.next = node


        self.tail = node

def print_singly_linked_list(node, sep, fptr):
    while node:
        fptr.write(str(node.data))

        node = node.next

        if node:
            fptr.write(sep)
sys.setrecursionlimit(2000)      
def mergeLists(h1, h2):
    if(h1==None and h2==None):
        return None
    elif(h1==None):
        return h2
    elif(h2==None):
        return h1
    if(h1.data<=h2.data):
        h1.next=mergeLists(h1.next,h2)
    elif(h1.data>h2.data):
        temp = h2
        h2 = h2.next
        temp.next=h1
        h1=temp
        h1.next = mergeLists(h1.next,h2)
    return h1

if __name__ == '__main__':
