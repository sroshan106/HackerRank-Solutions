#!/bin/python3

import math
import os
import random
import re
import sys

class SinglyLinkedListNode:
    def __init__(self, node_data):
        self.data = node_data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert_node(self, node_data):
        node = SinglyLinkedListNode(node_data)

        if not self.head:
            self.head = node
        else:
            self.tail.next = node


        self.tail = node

def print_singly_linked_list(node, sep, fptr):
    while node:
        fptr.write(str(node.data))

        node = node.next

        if node:
            fptr.write(sep)

def findMergeNode(head1, head2):
    temp1=head1
    temp2=head2
    count1=0
    count2=0
    while(head1):
        count1+=1
        head1=head1.next
    while(head2):
        count2+=1
        head2=head2.next
    d = abs(count2-count1)
    if(count1>count2):
        i=0
        while(i<d):
            temp1=temp1.next
            i+=1
    if(count2>count1):
        i=0
        while(i<d):
            temp2=temp2.next
            i+=1
    
    while(temp1):
        if(temp1==temp2):
            return temp1.data
        temp1=temp1.next
        temp2=temp2.next

    
if __name__ == '__main__':
